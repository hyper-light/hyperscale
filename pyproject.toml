# pyproject.toml

[build-system]
requires      = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyperscale"
version = "0.4.2"
requires-python = ">=3.11"
description = "Performance testing at scale."
readme = "README.md"
authors = [{ name = "Ada Lundhe", email = "sean.corbett@umconnect.edu" }]
license = { file = "LICENSE" }
classifiers = [
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
]
keywords = [
        'pypi', 
        'cicd', 
        'python',
        'performance',
        'testing',
        'dag',
        'graph',
        'workflow'
]
dependencies = [
    "attr",
    "networkx",
    "aiodns",
    "psutil",
    "pydantic",
    "zstandard",
    "cryptography",
    "python-dotenv",
    "aioquic",
    "cloudpickle",
    "orjson",
    "msgspec",
    "numpy",
]

[project.optional-dependencies]
all = [
    'grpcio',
    'grpcio-tools',
    'gql',
    'playwright',
    'azure-cosmos',
    'libhoney',
    'influxdb_client',
    'newrelic',
    'aio_statsd',
    'prometheus-client',
    'prometheus-api-client',
    'cassandra-driver',
    'datadog',
    'motor',
    'redis',
    'aioredis',
    'aiomysql',
    'psycopg2-binary',
    'sqlalchemy',
    'sqlalchemy[asyncio]',
    'boto3',
    'snowflake-sqlalchemy',
    'snowflake-connector-python',
    'google-cloud-bigquery',
    'google-cloud-bigtable',
    'google-cloud-storage',
    'cryptography',
    'aioquic',
    'dicttoxml',
    'opentelemetry-api',
    'datadog_api_client',
    'aiokafka',
    'haralyzer',
    'asyncpg',
    'xmltodict',
]
all-clients = [
    'grpcio',
    'grpcio-tools',
    'gql',
    'playwright',
    'cryptography',
    'aioquic',
    'opentelemetry-api'
]
all-reporters = [
    'azure-cosmos',
    'libhoney',
    'influxdb_client',
    'newrelic',
    'aio_statsd',
    'prometheus-client',
    'prometheus-api-client',
    'cassandra-driver',
    'datadog',
    'motor',
    'redis',
    'aioredis',
    'aiomysql',
    'psycopg2-binary',
    'asyncpg',
    'sqlalchemy',
    'boto3',
    'snowflake-connector-python',
    'google-cloud-bigquery',
    'google-cloud-bigtable',
    'google-cloud-storage',
    'dicttoxml',
    'datadog-api-client',
    'aiosonic',
    'aiokafka'
]

playwright = [
    'playwright'
]
azure = [
    'azure-cosmos'
]
honeycomb = [
    'libhoney'
]
influxdb = [
    'influxdb_client'
]
newrelic = [
    'newrelic'
]
statsd = [
    'aio_statsd'
]
prometheus = [
    'prometheus-client',
    'prometheus-api-client'
]
cassandra = [
    'cassandra-driver'
]
datadog = [
    'datadog-api-client',
    'aiosonic'
]
mongodb = [
    'motor'
]
redis = [
    'redis',
    'aioredis'
]
kafka = [
    'aiokafka'
]
sql = [
    'aiomysql',
    'psycopg2-binary',
    'asyncpg',
    'sqlalchemy',
    'sqlalchemy[asyncio]'
]
aws = [
    'boto3'
]
grpc = [
    'grpcio',
    'grpcio-tools'
]
graphql = [
    'gql'
]
http3 = [
    'cryptography',
    'aioquic'
]
snowflake = [
    'snowflake-sqlalchemy',
    'snowflake-connector-python'
]
google = [
    'google-cloud-bigquery',
    'google-cloud-bigtable',
    'google-cloud-storage',
]
xml = [
    'dicttoxml',
    'xmltodict'
]
opentelemetry = [
    'opentelemetry-api'
]
har = [
    'haralyzer'
]

[project.urls]
Homepage = "https://github.com/hyper-light/hyperscale"

[project.scripts]
hyperscale = "hyperscale.commands.root:run"

[tool.setuptools.packages]
find = {}  # Scanning implicit namespaces is active by default

[tool.ruff]
target-version = "py311"